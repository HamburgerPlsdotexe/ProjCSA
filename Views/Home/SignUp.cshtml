@model ProjectCSA.Models.StudentModel


@{
    ViewBag.Title = "SignUp";
}

<h2>SignUp</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sign up as a teacher</h4>
        <hr />
        @Html.ValidationSummary(true, "")
    <div class="form-group">
        @Html.LabelFor(model => model.TeacherCode)
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeacherCode)
        </div>
        <div class="validation">
            @Html.ValidationMessageFor(model => model.TeacherCode, "")
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fname)
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fname)
                @Html.ValidationMessageFor(model => model.Fname, "")

        <h4>StudentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Snum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Snum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Snum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Infix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Infix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Infix, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Lname)
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lname)
                @Html.ValidationMessageFor(model => model.Lname, "")

            @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Password)
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password, "")

            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.confirmPassword)
            <div class="col-md-10">
                @Html.EditorFor(model => model.confirmPassword)
                @Html.ValidationMessageFor(model => model.confirmPassword, "")

            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to home page", "Index")

    @Html.ActionLink("Back to List", "Index")

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
